pipeline {
    environment {
        IMAGE_NAME='productpage'
        VERSION="v${env.BUILD_NUMBER}"
        REPO='evgenil'
        CREDENTIALS_ID='evgenil'
    }
    agent any
    stages {
        stage('Build') {
            steps {
                script {
                    //BuildtheDockerimageforthebuildstage
                    sh'docker build --target build --tag ${IMAGE_NAME}:${VERSION}-build -f welcome/app/bookinfo/src/productpage/Dockerfile welcome/app/bookinfo/src/productpage/'
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    //BuildandtesttheDockerimage
                    sh'docker build --target test --tag ${IMAGE_NAME}:${VERSION}-test -f welcome/app/bookinfo/src/productpage/Dockerfile welcome/app/bookinfo/src/productpage/'
                    sh'docker run --rm ${IMAGE_NAME}:${VERSION}-test'
                }
            }
        }
        stage('Push') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/',"${CREDENTIALS_ID}") {
                        sh'docker build --target build --tag ${REPO}/${IMAGE_NAME}:${VERSION} -f welcome/app/bookinfo/src/productpage/Dockerfile welcome/app/bookinfo/src/productpage/'
                        sh'docker push ${REPO}/${IMAGE_NAME}:${VERSION}'
                        //Continuewithcreatingalatestversionalso-usingdockertagandpushit
                    }
                }
            }
        }
    }
}
